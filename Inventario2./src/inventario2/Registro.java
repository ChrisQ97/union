/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inventario2;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.Date;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;

import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author sys515
 */
public class Registro extends javax.swing.JFrame {

    Conexion con = new Conexion();
   DefaultTableModel modeloBusqueda = new DefaultTableModel() {
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return false;
                }
            };
    Connection Consulta = con.conexion();
    private int año=0;
    private int dia=0;
    private int mes=0;
    private int dia2=0;
    private int año2=0;
    private int mes2=0;
    /**
     * Creates new form Registro
     */
    public Registro() {
        initComponents();
                
        P.setVisible(false);
        P2.setVisible(false);
        Buscador.setVisible(false);
        Inicio.setVisible(false);
        Final.setVisible(false);
        Inicio2.setVisible(false);
        Final2.setVisible(false);
        Regre.setVisible(false);
        AutoCompleteDecorator.decorate(Buscador);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();    
        this.setSize(dim);
        this.setLocation(dim.width/4-this.getSize().width/4, dim.height/10-this.getSize().height/10);
        
        
        this.setResizable(false);
        this.setDefaultCloseOperation(this.HIDE_ON_CLOSE); 

       
      
          
            
            modeloBusqueda.addColumn("Codigo");
            
            modeloBusqueda.addColumn("Producto");
            modeloBusqueda.addColumn("Marca");
            modeloBusqueda.addColumn("Proveedor");
            modeloBusqueda.addColumn("Fecha Compra");
            modeloBusqueda.addColumn("Cantidad");
            modeloBusqueda.addColumn("Unidad");
            modeloBusqueda.addColumn("Costo Unitario");
            modeloBusqueda.addColumn("Costo Total");
            modeloBusqueda.addColumn("Descripcion");
            modeloBusqueda.addColumn("Precio Unitario");
            modeloBusqueda.addColumn("Precio Total");
            
            
            Lote.setModel(modeloBusqueda);

            String datos[] = new String[12];

          try {

            Statement sx = Consulta.createStatement();
            ResultSet Ca = sx.executeQuery("SELECT P.Codigo,P.Nombre, P.Marca,V.NombreV, L.Fecha, L.Cantidad, P.Medida,\n" +
"L.CostoUnitario,L.CostoTotal,L.Descripcion,L.PrecioUnitario,L.PrecioTotal\n" +
"FROM Producto P \n" +
"inner JOIN Registro_Compras L \n" +
"on P.id=L.Producto_id \n" +
"inner JOIN FacturaCompra C \n" +
"on C.id=L.FacturaCompra_id\n" +
"inner JOIN Proveedor V \n" +
"on V.id=C.Proveedor_id");          
            while (Ca.next()) {
               
                datos[0] = Ca.getString(1);
                datos[1] = Ca.getString(2);
                datos[2] = Ca.getString(3);
                datos[3] = Ca.getString(4);
                datos[4] = Ca.getString(5);
                datos[5] = Ca.getString(6);
                datos[6] = Ca.getString(7);
                datos[7] = Ca.getString(8);
                datos[8] = Ca.getString(9);
                datos[9] = Ca.getString(10);
                datos[10] = Ca.getString(11);
                datos[11] = Ca.getString(12);
               
                modeloBusqueda.addRow(datos);
                
            }
            Lote.setModel(modeloBusqueda);
            
        } catch (SQLException ex) {
            Logger.getLogger(Ingreso.class.getName()).log(Level.SEVERE, null, ex);
        }
        Lote.setVisible(true);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        Inicio2 = new javax.swing.JLabel();
        Inicio = new com.toedter.calendar.JDateChooser();
        Regre = new javax.swing.JButton();
        Final2 = new javax.swing.JLabel();
        Final = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        Lote = new javax.swing.JTable();
        Buscador = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        P = new javax.swing.JRadioButton();
        P2 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(17, 111, 172));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconoso/icons8-google-web-search-50.png"))); // NOI18N
        jButton1.setContentAreaFilled(false);
        jButton1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/iconoso/icons8-google-web-search-filled-50.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 50, 50));

        Inicio2.setForeground(new java.awt.Color(255, 255, 255));
        Inicio2.setText("Inicio");
        jPanel1.add(Inicio2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 20, -1, -1));
        jPanel1.add(Inicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 20, 139, -1));

        Regre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconoso/icons8-lista-de-verificación-50.png"))); // NOI18N
        Regre.setContentAreaFilled(false);
        Regre.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/iconoso/icons8-lista-de-verificación-filled-50.png"))); // NOI18N
        Regre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegreActionPerformed(evt);
            }
        });
        jPanel1.add(Regre, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, 60, 50));

        Final2.setForeground(new java.awt.Color(255, 255, 255));
        Final2.setText("Final");
        jPanel1.add(Final2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 50, -1, -1));
        jPanel1.add(Final, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 50, 134, -1));

        Lote.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Lote.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LoteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Lote);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 95, 990, 410));

        Buscador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscadorActionPerformed(evt);
            }
        });
        jPanel1.add(Buscador, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 50, 147, -1));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconoso/icons8-multiedición-50.png"))); // NOI18N
        jButton2.setContentAreaFilled(false);
        jButton2.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/iconoso/icons8-multiedición-filled-50.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 10, 70, -1));

        P.setForeground(new java.awt.Color(255, 255, 255));
        P.setText("Proveedor");
        P.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PActionPerformed(evt);
            }
        });
        jPanel1.add(P, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 10, -1, -1));

        P2.setForeground(new java.awt.Color(255, 255, 255));
        P2.setText("Producto");
        P2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P2ActionPerformed(evt);
            }
        });
        jPanel1.add(P2, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 10, -1, -1));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Buscar");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, -1, -1));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Generar reporte");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 30, -1, -1));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Mostrar todo");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1034, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LoteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LoteMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_LoteMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        P.setVisible(true);
        P2.setVisible(true);
        Buscador.setVisible(true);
        Inicio.setVisible(true);
        Final.setVisible(true);
        Inicio2.setVisible(true);
        Final2.setVisible(true);
        Regre.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void PActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PActionPerformed
        try
        {
        año = Inicio.getCalendar().get(Calendar.YEAR);
         mes = Inicio.getCalendar().get(Calendar.MONTH) + 1;
         dia = Inicio.getCalendar().get(Calendar.DAY_OF_MONTH);
         año2 = Final.getCalendar().get(Calendar.YEAR);
         mes2= Final.getCalendar().get(Calendar.MONTH) + 1;
         dia2 = Final.getCalendar().get(Calendar.DAY_OF_MONTH);
    }                                        

    
    catch(NullPointerException ex) {
        P.setSelected(false);
    }
         if(año==0||dia==0||mes==00||año2==0||dia2==0||mes2==00)   
    {
        JOptionPane.showMessageDialog(this, "Al menos selecciona una fecha válida!", "Error!", JOptionPane.INFORMATION_MESSAGE);
    }
         else{
        Buscador.removeAllItems();
        P2.setSelected(false);
        try {

            Statement sx = Consulta.createStatement();
            ResultSet Ca = sx.executeQuery("SELECT Nit FROM Proveedor");
            while (Ca.next()) {

                Buscador.addItem(Ca.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Compras.class.getName()).log(Level.SEVERE, null, ex);
        }
         }
    }//GEN-LAST:event_PActionPerformed

    private void P2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P2ActionPerformed
        try
        {
        año = Inicio.getCalendar().get(Calendar.YEAR);
         mes = Inicio.getCalendar().get(Calendar.MONTH) + 1;
         dia = Inicio.getCalendar().get(Calendar.DAY_OF_MONTH);
         año2 = Final.getCalendar().get(Calendar.YEAR);
         mes2= Final.getCalendar().get(Calendar.MONTH) + 1;
         dia2 = Final.getCalendar().get(Calendar.DAY_OF_MONTH);
    }                                        

    
    catch(NullPointerException ex) {
        P2.setSelected(false);
    }
         if(año==0||dia==0||mes==00||año2==0||dia2==0||mes2==00)   
    {
        JOptionPane.showMessageDialog(this, "Al menos selecciona una fecha válida!", "Error!", JOptionPane.INFORMATION_MESSAGE);
    }
         else{
        Buscador.removeAllItems();
        P.setSelected(false);
        try {

            Statement sx = Consulta.createStatement();
            ResultSet Ca = sx.executeQuery("SELECT Codigo FROM Producto");
            while (Ca.next()) {

                Buscador.addItem(Ca.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Compras.class.getName()).log(Level.SEVERE, null, ex);
        
        }}    }//GEN-LAST:event_P2ActionPerformed

    private void BuscadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscadorActionPerformed
      try
        {
        año = Inicio.getCalendar().get(Calendar.YEAR);
         mes = Inicio.getCalendar().get(Calendar.MONTH) + 1;
         dia = Inicio.getCalendar().get(Calendar.DAY_OF_MONTH);
         año2 = Final.getCalendar().get(Calendar.YEAR);
         mes2= Final.getCalendar().get(Calendar.MONTH) + 1;
         dia2 = Final.getCalendar().get(Calendar.DAY_OF_MONTH);
    }                                        

    
    catch(NullPointerException ex) {
    }
      if(año==0||dia==0||mes==00||año2==0||dia2==0||mes2==00)   
    {
        JOptionPane.showMessageDialog(this, "Al menos selecciona una fecha válida!", "Error!", JOptionPane.INFORMATION_MESSAGE);
    }
    else
      {
        
        String Completo = (String) Buscador.getSelectedItem();
        if(P.isSelected())
        {
            Llenar(Completo);
        }
        if(P2.isSelected())
        {
            llenar2(Completo);
        }
      }
        // TODO add your handling code here:
    }//GEN-LAST:event_BuscadorActionPerformed

    private void RegreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegreActionPerformed
                  modeloBusqueda.setRowCount(0);

        P.setVisible(false);
        P2.setVisible(false);
        Buscador.setVisible(false);
        Inicio.setVisible(false);
        Final.setVisible(false);
        Inicio2.setVisible(false);
        Final2.setVisible(false);
        Regre.setVisible(false);

            String datos[] = new String[12];

          try {

            Statement sx = Consulta.createStatement();
            ResultSet Ca = sx.executeQuery("SELECT P.Codigo,P.Nombre, P.Marca,V.NombreV, L.Fecha, L.Cantidad, P.Medida,\n" +
"L.CostoUnitario,L.CostoTotal,L.Descripcion,L.PrecioUnitario,L.PrecioTotal\n" +
"FROM Producto P \n" +
"inner JOIN Registro_Compras L \n" +
"on P.id=L.Producto_id \n" +
"inner JOIN FacturaCompra C \n" +
"on C.id=L.FacturaCompra_id\n" +
"inner JOIN Proveedor V \n" +
"on V.id=C.Proveedor_id");          
            while (Ca.next()) {
               
                datos[0] = Ca.getString(1);
                datos[1] = Ca.getString(2);
                datos[2] = Ca.getString(3);
                datos[3] = Ca.getString(4);
                datos[4] = Ca.getString(5);
                datos[5] = Ca.getString(6);
                datos[6] = Ca.getString(7);
                datos[7] = Ca.getString(8);
                datos[8] = Ca.getString(9);
                datos[9] = Ca.getString(10);
                datos[10] = Ca.getString(11);
                datos[11] = Ca.getString(12);
               
                modeloBusqueda.addRow(datos);
                
            }
            Lote.setModel(modeloBusqueda);
            
        } catch (SQLException ex) {
            Logger.getLogger(Ingreso.class.getName()).log(Level.SEVERE, null, ex);
        }
        Lote.setVisible(true);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_RegreActionPerformed

    private void InformeProducto(String cod)
    {
                try {
                    
                  
            
            Date uno=new Date(año-1900,mes-1,dia);
            Date dos=new Date(año2-1900,mes2-1,dia2);
                    System.out.println(uno+" y "+dos+" ; "+cod);
            Connection tr = con.conexion();
            JasperReport reporte= null;
            String path="/home/sys515/Documentos/Git/Inventario2/Inventario2-master/Inventario2./src/Reportes/ventasProd.jasper";
            
            Map parametro =new HashMap();
            parametro.put("Fecha2",dos );
            parametro.put("Fecha1", uno);
            parametro.put("Codigo",cod);
            reporte= (JasperReport) JRLoader.loadObjectFromFile(path);
            JasperPrint jprint =JasperFillManager.fillReport(reporte,parametro,tr);
            JasperViewer view = new JasperViewer(jprint,false);
            view.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            view.setVisible(true);

            // TODO add your handling code here:
        } catch (JRException ex) {
            Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(P2.isSelected())
        {
            InformeProducto((String)Buscador.getSelectedItem());
        }
        if(P.isSelected())
        {
            InformeProducto((String)Buscador.getSelectedItem());
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed
    private void llenar2(String B)
    {
          modeloBusqueda.setRowCount(0);
        String datos[]=new String[12];
         try {

            Statement sx = Consulta.createStatement();
            ResultSet Ca = sx.executeQuery("SELECT P.Codigo,P.Nombre, P.Marca,V.NombreV, L.Fecha, L.Cantidad,P.Medida, \n" +
"L.CostoUnitario,L.CostoTotal,L.Descripcion,L.PrecioUnitario,L.PrecioTotal\n" +
"FROM Producto P \n" +
"inner JOIN Registro_Compras L \n" +
"on P.id=L.Producto_id \n" +
"inner JOIN FacturaCompra C \n" +
"on C.id=L.FacturaCompra_id\n" +
"inner JOIN Proveedor V \n" +
"on V.id=C.Proveedor_id where P.Codigo='"+B+"'&& L.Fecha BETWEEN '"+año+"-"+mes+"-"+dia+"' AND '"+año2+"-"+mes2+"-"+dia2+"'");          
            while (Ca.next()) {
               
                datos[0] = Ca.getString(1);
                datos[1] = Ca.getString(2);
                datos[2] = Ca.getString(3);
                datos[3] = Ca.getString(4);
                datos[4] = Ca.getString(5);
                datos[5] = Ca.getString(6);
                datos[6] = Ca.getString(7);
                datos[7] = Ca.getString(8);
                datos[8] = Ca.getString(9);
                datos[9] = Ca.getString(10);
                datos[10] = Ca.getString(11);
                datos[11] = Ca.getString(12);
               
                modeloBusqueda.addRow(datos);
                
            }
            Lote.setModel(modeloBusqueda);
            
        } catch (SQLException ex) {
            Logger.getLogger(Ingreso.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void Llenar(String B)
    {
        modeloBusqueda.setRowCount(0);
        String datos[]=new String[12];
         try {

            Statement sx = Consulta.createStatement();
            ResultSet Ca = sx.executeQuery("SELECT P.Codigo,P.Nombre, P.Marca,V.NombreV, L.Fecha, L.Cantidad,P.Medida, \n" +
"L.CostoUnitario,L.CostoTotal,L.Descripcion,L.PrecioUnitario,L.PrecioTotal\n" +
"FROM Producto P \n" +
"inner JOIN Registro_Compras L \n" +
"on P.id=L.Producto_id \n" +
"inner JOIN FacturaCompra C \n" +
"on C.id=L.FacturaCompra_id\n" +
"inner JOIN Proveedor V \n" +
"on V.id=C.Proveedor_id where V.Nit='"+B+"'&& L.Fecha BETWEEN '"+año+"-"+mes+"-"+dia+"' AND '"+año2+"-"+mes2+"-"+dia2+"'");          
            while (Ca.next()) {
               
                datos[0] = Ca.getString(1);
                datos[1] = Ca.getString(2);
                datos[2] = Ca.getString(3);
                datos[3] = Ca.getString(4);
                datos[4] = Ca.getString(5);
                datos[5] = Ca.getString(6);
                datos[6] = Ca.getString(7);
                datos[7] = Ca.getString(8);
                datos[8] = Ca.getString(9);
                datos[9] = Ca.getString(10);
                datos[10] = Ca.getString(11);
                datos[11] = Ca.getString(12);
               
                modeloBusqueda.addRow(datos);
                
            }
            Lote.setModel(modeloBusqueda);
            
        } catch (SQLException ex) {
            Logger.getLogger(Ingreso.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Registro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Buscador;
    private com.toedter.calendar.JDateChooser Final;
    private javax.swing.JLabel Final2;
    private com.toedter.calendar.JDateChooser Inicio;
    private javax.swing.JLabel Inicio2;
    private javax.swing.JTable Lote;
    private javax.swing.JRadioButton P;
    private javax.swing.JRadioButton P2;
    private javax.swing.JButton Regre;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
